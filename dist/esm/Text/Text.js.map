{"version":3,"sources":["../../../src/Text/Text.tsx"],"names":["StyledText","TextChakra","props","colorized","theme","text","shadow","Text","children","componentColor","colors","colorBase","primary"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;AAEA;AAEA;AAEA,IAAMA,UAAU,GAAG,oBAAOC,UAAP,CAAH,oBACZ,UAACC,KAAD;AAAA,SACAA,KAAK,CAACC,SAAN,qBACYD,KAAK,CAACC,SADlB,MADA;AAAA,CADY,EAOC,UAACD,KAAD;AAAA,SAAWA,KAAK,CAACE,KAAN,CAAYC,IAAZ,CAAiBC,MAA5B;AAAA,CAPD,CAAhB;;AAgBA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAiD;AAAA,MAA9CC,QAA8C,QAA9CA,QAA8C;AAAA,MAApCL,SAAoC,QAApCA,SAAoC;AAAA,MAAtBD,KAAsB;;AAC5D,MAAME,KAAK,GAAG,qBAAd;AAEA,MAAIK,cAAc,GAAIN,SAAS,IAAI,mBAAMA,SAAN,CAAd,GAAkCA,SAAlC,GAA8CC,KAAK,CAACM,MAAN,CAAaC,SAAhF,CAH4D,CAK5D;;AACA,MAAG,OAAOR,SAAP,KAAqB,SAAxB,EAAmC;AACjCM,IAAAA,cAAc,GAAGL,KAAK,CAACM,MAAN,CAAaE,OAAb,CAAqB,GAArB,CAAjB;AACD;;AAED,sBACE,gCAAC,UAAD;AACE,IAAA,SAAS,EAAEH;AADb,KAEMP,KAFN,GAIGM,QAJH,CADF;AAQD,CAlBD;;eAqBeD,I","sourcesContent":["import React, { FC } from \"react\";\nimport { Text as TextChakra, TextProps as TextChakraProps, useTheme } from '@chakra-ui/core';\nimport { styled, StyledThemeTypes } from '../themes';\n\nimport { isHex } from '../utils/colors';\n\n// interface TextProps extends  {\n\n// };\n\nconst StyledText = styled(TextChakra)<StyledThemeTypes>`\n  ${(props) => (\n    props.colorized && (\n      `color: ${props.colorized};`\n    )\n  )}\n\n  text-shadow: ${(props) => props.theme.text.shadow};\n`;\n\ninterface TextProps extends TextChakraProps {\n  children: JSX.Element | JSX.Element[] | string | string[] | number;\n  colorized?: boolean | string;\n}\n\n\nconst Text = ({ children, colorized, ...props }:TextProps) => {\n  const theme = useTheme();\n\n  let componentColor = (colorized && isHex(colorized)) ? colorized : theme.colors.colorBase;\n\n  // In case that colors is only a boolean\n  if(typeof colorized === 'boolean') {\n    componentColor = theme.colors.primary[500]\n  }\n\n  return (\n    <StyledText\n      colorized={componentColor}\n      {...props}\n    >\n      {children}\n    </StyledText>\n  );\n}\n\n\nexport default Text;\n"],"file":"Text.js"}