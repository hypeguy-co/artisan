{"version":3,"sources":["../../../src/Divider/Divider.js"],"names":["StyledDivider","ChakraDivider","props","borderColorized","align","fadePercentage","Divider","theme","componentColor","border","colorGradientFade","defaultProps"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAMA,aAAa,GAAG,wBAAOC,aAAP,CAAH,oBAGf,UAACC,KAAD;AAAA,SAAWA,KAAK,CAACC,eAAN,6MAUKD,KAAK,CAACC,eAVX,0BAAX;AAAA,CAHe,EAkBF,UAAAD,KAAK;AAAA,SAAIA,KAAK,CAACC,eAAV;AAAA,CAlBH,EAoBf,UAACD,KAAD;AAAA,SAAWA,KAAK,CAACE,KAAN,KAAgB,QAAhB,wIAE6FF,KAAK,CAACC,eAFnG,mBAAX;AAAA,CApBe,EA2Bf,UAACD,KAAD;AAAA,SAAWA,KAAK,CAACE,KAAN,KAAgB,MAAhB,uEAE4BF,KAAK,CAACC,eAFlC,gCAEuED,KAAK,CAACG,cAF7E,kBAAX;AAAA,CA3Be,CAAnB;;AAkCA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAiC;AAAA,MAA/BH,eAA+B,QAA/BA,eAA+B;AAAA,MAAXD,KAAW;;AAC/C,MAAMK,KAAK,GAAG,qBAAd;AACA,MAAMC,cAAc,GAAIL,eAAe,IAAI,mBAAMA,eAAN,CAApB,GAA8CA,eAA9C,GAAgEI,KAAK,CAACE,MAAN,CAAaC,iBAApG;AACA,sBAAO,oBAAC,aAAD;AAAe,IAAA,eAAe,EAAEF;AAAhC,KAAoDN,KAApD,EAAP;AACD,CAJD;;AAMAI,OAAO,CAACK,YAAR,GAAuB;AACrBN,EAAAA,cAAc,EAAE;AADK,CAAvB;eAIeC,O","sourcesContent":["import { Divider as ChakraDivider } from '@chakra-ui/core';\nimport styled from '@emotion/styled';\nimport { isHex } from '../utils/colors'\nimport { useTheme } from '@chakra-ui/core';\n\nconst StyledDivider = styled(ChakraDivider)`\n  position: relative;\n\n  ${(props) => props.borderColorized && (`\n    border: 0px;\n    \n    &:after{\n      content: ' ';\n      display: block;\n      height: 1px;\n      margin-top: 2px;\n      width: 100%;\n      background: #000;\n      background: ${props.borderColorized};\n      }\n    }\n  `)}\n\n  background: ${(props => props.borderColorized)};\n\n  ${(props) => props.align === 'center' && (`\n    &:after{\n      background: -webkit-gradient(linear,0 0,100% 0,from(rgba(0,0,0,0)),to(rgba(0,0,0,0)),color-stop(50%,${props.borderColorized}));\n    }\n  `)}\n\n\n  ${(props) => props.align === 'left' && (`\n    &:after{\n      background: linear-gradient(90deg, ${props.borderColorized} 0%, rgba(0,0,0,0) ${props.fadePercentage});\n    }\n  `)}\n`;\n\nconst Divider = ({borderColorized, ...props}) => {\n  const theme = useTheme()\n  const componentColor = (borderColorized && isHex(borderColorized)) ? borderColorized : theme.border.colorGradientFade;\n  return <StyledDivider borderColorized={componentColor} {...props}/>\n};\n\nDivider.defaultProps = {\n  fadePercentage: '80%'\n}\n\nexport default Divider;\n"],"file":"Divider.js"}